version = 0.2

configurations {
    hibernatetool
}

dependencies {
    implementation group: 'org.hibernate', name: 'hibernate-core', version: '5.3.0.CR1'
    hibernatetool group: 'org.hibernate', name: 'hibernate-tools', version: '5.2.10.Final'
    hibernatetool group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.2.3'
    hibernatetool group: 'org.postgresql', name: 'postgresql', version: '42.2.2'

    testImplementation group: 'com.h2database', name: 'h2', version: '1.4.196'
}

def hbmfileprops = new File("$rootDir/$appName/$pluginsDir/$project.name/$hbmDir/$hbmPropsFile")

if (hbmfileprops.exists()) {
    Properties properties = new Properties()
    InputStream inputStream = new FileInputStream(hbmfileprops)
    properties.load(inputStream)
    inputStream.close()

    task hbm2java {
        mkdir "$rootDir/$appName/$pluginsDir/$project.name/$hbmDir/classes"
        mkdir "$rootDir/$appName/$pluginsDir/$project.name/$hbmDir/src"

        ant.taskdef(name: 'hbm2java',
                classname: 'org.hibernate.tool.ant.HibernateToolTask',
                classpath: configurations.hibernatetool.asPath)
        ant.hbm2java(destdir: "$rootDir/$appName/$pluginsDir/$project.name/$hbmDir/src") {
            configuration(propertyfile: "$rootDir/$appName/$pluginsDir/$project.name/$hbmDir/$hbmPropsFile") {
                ant.fileSet(dir: "$rootDir/$appName/$pluginsDir/$project.name/$hbmDir") {
                    include(name: "**/*.hbm.xml")
                }
            }
            hbm2java(jdk5: true)
        }

//    <jar jarfile="${lib.dir}/schema.jar">
//    <fileset dir="${hbm.dir}/classes"/>
//    </jar>
    }

    task compilehbmjava(dependsOn: 'hbm2java', type: JavaCompile) {
        println "Compiling generated hibernate java classes..."

        source = "$rootDir/$appName/$pluginsDir/$project.name/$hbmDir/src"
        include "**/*.java"
        destinationDir = file("$rootDir/$appName/$pluginsDir/$project.name/$hbmDir/classes")
        classpath = sourceSets.main.runtimeClasspath
    }

    compilehbmjava.mustRunAfter hbm2java

    task schemacreate(dependsOn: 'compilehbmjava') {
        doLast {
            ant.taskdef(name: 'schemacreate',
                    classname: 'org.hibernate.tool.hbm2ddl.SchemaExportTask',
                    classpath: configurations.hibernatetool.asPath
            )

            ant.schemacreate(properties: "$rootDir/$appName/$pluginsDir/$project.name/$hbmDir/$hbmPropsFile",
                    quiet: 'no',
                    text: 'no',
                    drop: 'no',
                    delimiter: ';',
                    output: "$rootDir/$appName/$pluginsDir/$project.name/$hbmDir/$sqlDir/${properties.getProperty('db_product_name')}_schema_create.sql") {
                ant.fileSet(dir: "$rootDir/$appName/$pluginsDir/$project.name/$hbmDir") {
                    include(name: "**/*.hbm.xml")
                }
            }
        }
    }

    task schemaupdate(dependsOn: 'compilehbmjava') {
        doLast {
            ant.taskdef(name: 'schemaupdate',
                    classname: 'org.hibernate.tool.hbm2ddl.SchemaUpdateTask',
                    classpath: configurations.hibernatetool.asPath
            )

            ant.schemaupdate(properties: "$rootDir/$appName/$pluginsDir/$project.name/$hbmDir/$hbmPropsFile",
                    quiet: 'no',
                    text: 'no',
                    delimiter: ';',
                    outputFile: "$rootDir/$appName/$pluginsDir/$project.name/$hbmDir/$sqlDir/${properties.getProperty('db_product_name')}_schema_update.sql") {
                ant.fileSet(dir: "$rootDir/$appName/$pluginsDir/$project.name/$hbmDir") {
                    include(name: "**/*.hbm.xml")
                }
            }
        }
    }

    task schemadrop(dependsOn: 'compilehbmjava') {
        doLast {
            ant.taskdef(name: 'schemadrop',
                    classname: 'org.hibernate.tool.hbm2ddl.SchemaExportTask',
                    classpath: configurations.hibernatetool.asPath
            )

            ant.schemadrop(properties: "$rootDir/$appName/$pluginsDir/$project.name/$hbmDir/$hbmPropsFile",
                    quiet: 'no',
                    text: 'no',
                    drop: 'yes',
                    delimiter: ';',
                    output: "$rootDir/$appName/$pluginsDir/$project.name/$hbmDir/$sqlDir/${properties.getProperty('db_product_name')}_schema_drop.sql") {
                ant.fileSet(dir: "$rootDir/$appName/$pluginsDir/$project.name/$hbmDir") {
                    include(name: "**/*.hbm.xml")
                }
            }
        }
    }
}