title.plugin.opendbcopy.schemageneration=Migrate Database schema (DDL)
title.plugin.opendbcopy.schemageneration.panel.0=0. Configuration
title.plugin.opendbcopy.schemageneration.panel.1=1. Database Connections
title.plugin.opendbcopy.schemageneration.panel.2=2. Source Model
title.plugin.opendbcopy.schemageneration.panel.3=3. Tables to Migrate
title.plugin.opendbcopy.schemageneration.panel.4=4. Columns to Migrate
title.plugin.opendbcopy.schemageneration.panel.5=5. Execute Plugin
plugin.opendbcopy.schemageneration.conf.title.opendbcopy=openDBcopy Parameters
plugin.opendbcopy.schemageneration.conf.title.hibernateOptions=Hibernate Schema Generation Options
plugin.opendbcopy.schemageneration.conf.title.generator_class=Select a unique primary key generation algorithm used by Hibernate (place mouse over algorithm for details)
plugin.opendbcopy.schemageneration.hibernateDialect=Select a Database Dialect
plugin.opendbcopy.schemageneration.conf.outputDir=Where shall the Hibernate Mapping files (*.hbm.xml) be stored?
plugin.opendbcopy.schemageneration.conf.outputDir.browse=Browse ...
plugin.opendbcopy.schemageneration.conf.packageName=Enter a qualified Java Package name (e.g. project.schema)
plugin.opendbcopy.schemageneration.conf.output.filelistIdentifier=Output Filelist Identifier
plugin.opendbcopy.schemageneration.conf.outerJoin=Specify if collections should be fetched by outer join, whenever possible.
plugin.opendbcopy.schemageneration.conf.lazy=Enable lazy initialization
plugin.opendbcopy.schemageneration.conf.inverse=Mark collections as the "inverse" end of bidirectional associations
plugin.opendbcopy.schemageneration.conf.generator_class.increment=increment - generates identifiers of type long, short or int that are unique only when no other process is inserting data into the same table. \nDo not use in a cluster.
plugin.opendbcopy.schemageneration.conf.generator_class.identity=identity - supports identity columns in DB2, MariaDB, MS SQL Server, Sybase and HypersonicSQL. The returned identifier is of type long, short or int.
plugin.opendbcopy.schemageneration.conf.generator_class.sequence=sequence - uses a sequence in DB2, PostgreSQL, Oracle, SAP DB, McKoi or a generator in Interbase. The returned identifier is of type long, short or int.
plugin.opendbcopy.schemageneration.conf.generator_class.hilo=hilo - uses a hi/lo algorithm to efficiently generate identifiers of type long, short or int, given a table and column (by default hibernate_unique_key and next_hi respectively) as a source of hi values. The hi/lo algorithm generates identifiers that are unique only for a particular database. Do not use this generator with connections enlisted with JTA or with a user-supplied connection.
plugin.opendbcopy.schemageneration.conf.generator_class.seqhilo=seqhilo - uses a hi/lo algorithm to efficiently generate identifiers of type long, short or int, given a named database sequence.
plugin.opendbcopy.schemageneration.conf.generator_class.uuid_hex=uuid.hex - uses a 128-bit UUID algorithm to generate identifiers of type string, unique within a network (the IP address is used). The UUID is encoded as a string of hexadecimal digits of length 32.
plugin.opendbcopy.schemageneration.conf.generator_class.uuid_string=uuid.string - uses the same UUID algorithm. The UUID is encoded a string of length 16 consisting of (any) ASCII characters. Do not use with PostgreSQL.
plugin.opendbcopy.schemageneration.conf.generator_class.native=native - picks identity, sequence or hilo depending upon the capabilities of the underlying database.
plugin.opendbcopy.schemageneration.conf.generator_class.assigned=assigned - lets the application to assign an identifier to the object before save() is called.
